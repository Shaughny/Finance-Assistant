{"ast":null,"code":"import React,{useContext,useState,useEffect}from'react';import{Doughnut}from'react-chartjs-2';import{DataContext}from'../contexts/DataContext';import{jsx as _jsx}from\"react/jsx-runtime\";export var PieChart=function PieChart(){var _useContext=useContext(DataContext),data=_useContext.data;var expenses=data.filter(function(e){return!e.isincome;});var incomes=data.filter(function(e){return e.isincome;});var totalExpense=0;var totalIncome=0;incomes.forEach(function(e){return totalIncome=parseInt(totalIncome)+parseInt(e.total);});expenses.forEach(function(e){return totalExpense=parseInt(totalExpense)+parseInt(e.total);});var chartData={};var options={plugins:{tooltip:{bodyFont:{size:18}},legend:{labels:{color:'white',font:{size:20}},borderWidth:0}},elements:{arc:{borderWidth:2}}};chartData={fontColor:'white',font:{size:20},labels:[\"Expenses\",\"Remaining\"],datasets:[{borderColor:'#474b4f',label:'transactions',data:[totalExpense,totalIncome-totalExpense],backgroundColor:['#ff0000','white']}]};if(totalIncome-totalExpense<0){chartData={fontColor:'white',font:{size:20},labels:[\"Expenses\",\"Remaining\"],datasets:[{borderColor:'#474b4f',label:'transactions',data:[totalExpense,0],backgroundColor:['#ff0000','white']}]};}if(totalExpense+totalIncome>0){return/*#__PURE__*/_jsx(\"div\",{className:\"charts\",children:/*#__PURE__*/_jsx(Doughnut,{data:chartData,height:100,width:100,options:options})});}else{return/*#__PURE__*/_jsx(\"div\",{});}};export default PieChart;","map":{"version":3,"sources":["/home/mark/Documents/Projects/personalFinance/FinanceAssistant/client/src/components/PieChart.js"],"names":["React","useContext","useState","useEffect","Doughnut","DataContext","PieChart","data","expenses","filter","e","isincome","incomes","totalExpense","totalIncome","forEach","parseInt","total","chartData","options","plugins","tooltip","bodyFont","size","legend","labels","color","font","borderWidth","elements","arc","fontColor","datasets","borderColor","label","backgroundColor"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,UAAd,CAA0BC,QAA1B,CAAoCC,SAApC,KAAoD,OAApD,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAAQC,WAAR,KAA0B,yBAA1B,C,2CAIA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAE1B,gBAAeL,UAAU,CAACI,WAAD,CAAzB,CAAOE,IAAP,aAAOA,IAAP,CACA,GAAMC,CAAAA,QAAQ,CAAGD,IAAI,CAACE,MAAL,CAAY,SAACC,CAAD,QAAK,CAACA,CAAC,CAACC,QAAR,EAAZ,CAAjB,CACA,GAAMC,CAAAA,OAAO,CAAGL,IAAI,CAACE,MAAL,CAAY,SAACC,CAAD,QAAKA,CAAAA,CAAC,CAACC,QAAP,EAAZ,CAAhB,CACA,GAAIE,CAAAA,YAAY,CAAG,CAAnB,CACA,GAAIC,CAAAA,WAAW,CAAG,CAAlB,CACAF,OAAO,CAACG,OAAR,CAAgB,SAAAL,CAAC,QAAII,CAAAA,WAAW,CAAGE,QAAQ,CAACF,WAAD,CAAR,CAAyBE,QAAQ,CAACN,CAAC,CAACO,KAAH,CAAnD,EAAjB,EACAT,QAAQ,CAACO,OAAT,CAAiB,SAAAL,CAAC,QAAGG,CAAAA,YAAY,CAAGG,QAAQ,CAACH,YAAD,CAAR,CAA0BG,QAAQ,CAACN,CAAC,CAACO,KAAH,CAApD,EAAlB,EACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACZC,OAAO,CAAC,CACJC,OAAO,CAAC,CACJC,QAAQ,CAAC,CACLC,IAAI,CAAC,EADA,CADL,CADJ,CAMJC,MAAM,CAAC,CACHC,MAAM,CAAC,CACHC,KAAK,CAAE,OADJ,CAEHC,IAAI,CAAC,CACDJ,IAAI,CAAE,EADL,CAFF,CADJ,CAOHK,WAAW,CAAE,CAPV,CANH,CADI,CAiBZC,QAAQ,CAAE,CACRC,GAAG,CAAE,CACHF,WAAW,CAAE,CADV,CADG,CAjBE,CAAhB,CAwBIV,SAAS,CAAG,CACRa,SAAS,CAAC,OADF,CAERJ,IAAI,CAAC,CAACJ,IAAI,CAAE,EAAP,CAFG,CAGRE,MAAM,CAAC,CAAC,UAAD,CAAY,WAAZ,CAHC,CAIRO,QAAQ,CAAC,CAAC,CACNC,WAAW,CAAC,SADN,CAENC,KAAK,CAAC,cAFA,CAGN3B,IAAI,CAAC,CAACM,YAAD,CAAeC,WAAW,CAACD,YAA3B,CAHC,CAINsB,eAAe,CAAC,CAAC,SAAD,CAAW,OAAX,CAJV,CAAD,CAJD,CAAZ,CAYA,GAAGrB,WAAW,CAACD,YAAZ,CAA2B,CAA9B,CAAgC,CAC5BK,SAAS,CAAG,CACRa,SAAS,CAAC,OADF,CAERJ,IAAI,CAAC,CAACJ,IAAI,CAAE,EAAP,CAFG,CAGRE,MAAM,CAAC,CAAC,UAAD,CAAY,WAAZ,CAHC,CAIRO,QAAQ,CAAC,CAAC,CACNC,WAAW,CAAC,SADN,CAENC,KAAK,CAAC,cAFA,CAGN3B,IAAI,CAAC,CAACM,YAAD,CAAe,CAAf,CAHC,CAINsB,eAAe,CAAC,CAAC,SAAD,CAAW,OAAX,CAJV,CAAD,CAJD,CAAZ,CAaH,CAIL,GAAGtB,YAAY,CAACC,WAAb,CAA0B,CAA7B,CAA+B,CAC3B,mBACQ,YAAK,SAAS,CAAC,QAAf,uBACI,KAAC,QAAD,EACA,IAAI,CAAEI,SADN,CAEA,MAAM,CAAE,GAFR,CAGA,KAAK,CAAE,GAHP,CAIA,OAAO,CAAEC,OAJT,EADJ,EADR,CAWH,CAZD,IAaI,CACA,mBACI,cADJ,CAGH,CAGJ,CArFM,CAuFP,cAAeb,CAAAA,QAAf","sourcesContent":["import React,{useContext, useState, useEffect} from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport {DataContext} from '../contexts/DataContext';\n\n\n\nexport const PieChart = () => {\n\n    const {data} = useContext(DataContext);\n    const expenses = data.filter((e)=>!e.isincome);\n    const incomes = data.filter((e)=>e.isincome);\n    let totalExpense = 0;\n    let totalIncome = 0;\n    incomes.forEach(e => totalIncome = parseInt(totalIncome)  + parseInt(e.total) );\n    expenses.forEach(e=> totalExpense = parseInt(totalExpense)  + parseInt(e.total) );\n    let chartData = {};\n  \n    const options = {\n        plugins:{\n            tooltip:{\n                bodyFont:{\n                    size:18\n                }\n            },\n            legend:{\n                labels:{\n                    color: 'white',\n                    font:{\n                        size: 20\n                    }\n                },\n                borderWidth: 0\n            }\n        },\n        elements: {\n          arc: {\n            borderWidth: 2\n          }\n        }\n      };\n\n        chartData = {\n            fontColor:'white',\n            font:{size: 20},\n            labels:[\"Expenses\",\"Remaining\"],\n            datasets:[{\n                borderColor:'#474b4f',\n                label:'transactions',\n                data:[totalExpense,(totalIncome-totalExpense)],\n                backgroundColor:['#ff0000','white'],\n                \n            }]\n        }\n        if(totalIncome-totalExpense < 0){\n            chartData = {\n                fontColor:'white',\n                font:{size: 20},\n                labels:[\"Expenses\",\"Remaining\"],\n                datasets:[{\n                    borderColor:'#474b4f',\n                    label:'transactions',\n                    data:[totalExpense,(0)],\n                    backgroundColor:['#ff0000','white'],\n                    \n                }]\n            }\n\n        }\n    \n   \n    \n    if(totalExpense+totalIncome >0){\n        return (\n                <div className=\"charts\">\n                    <Doughnut\n                    data={chartData}\n                    height={100}\n                    width={100}\n                    options={options}\n                    />\n                </div>\n            )\n\n    }    \n    else{\n        return(\n            <div></div>\n        )\n    }\n    \n   \n}\n\nexport default PieChart;\n\n"]},"metadata":{},"sourceType":"module"}