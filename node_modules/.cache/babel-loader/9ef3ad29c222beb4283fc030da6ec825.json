{"ast":null,"code":"var _jsxFileName = \"/home/mark/Documents/Projects/personalfinance testing/client/src/contexts/PortfolioContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockContext = /*#__PURE__*/createContext();\nconst axiosInstance = axios.create({\n  baseURL: 'https://www.alphavantage.co/query'\n});\n\nconst StockContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [investments, setInvestments] = useState([]);\n\n  const getStockQuote = symbol => {\n    return axiosInstance.get('', {\n      params: {\n        function: 'GLOBAL_QUOTE',\n        symbol,\n        apikey: '3H68FKF113QNYK6X'\n      }\n    });\n  };\n\n  const fetchStockData = async (symbol, shares) => {\n    const result = await getStockQuote('GRN.TO');\n    setInvestments([...investments, {\n      symbol: result.data['Global Quote']['01. symbol'],\n      price: result.data['Global Quote']['05. price'],\n      shares: shares\n    }]);\n    console.log(result.data['Global Quote']['01. symbol']);\n  };\n\n  useEffect(() => {\n    fetchStockData();\n  }, []);\n\n  const deleteStock = symbol => {};\n\n  const addStock = symbol => {};\n\n  return /*#__PURE__*/_jsxDEV(StockContext.Provider, {\n    value: {\n      investments,\n      getStockQuote,\n      deleteStock,\n      addStock\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StockContextProvider, \"2pq/hT5kf8IZhtdPXwd00E+GFsc=\");\n\n_c = StockContextProvider;\nexport default StockContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockContextProvider\");","map":{"version":3,"sources":["/home/mark/Documents/Projects/personalfinance testing/client/src/contexts/PortfolioContext.js"],"names":["React","createContext","useState","useEffect","axios","StockContext","axiosInstance","create","baseURL","StockContextProvider","children","investments","setInvestments","getStockQuote","symbol","get","params","function","apikey","fetchStockData","shares","result","data","price","console","log","deleteStock","addStock"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AACA,MAAMK,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE;AADsB,CAAb,CAAtB;;AAMA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAEvC,QAAK,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA7C;;AAMA,QAAMW,aAAa,GAAIC,MAAD,IAAW;AAC7B,WAAOR,aAAa,CAACS,GAAd,CAAkB,EAAlB,EAAqB;AAC5BC,MAAAA,MAAM,EAAC;AACHC,QAAAA,QAAQ,EAAE,cADP;AAEHH,QAAAA,MAFG;AAGHI,QAAAA,MAAM,EAAE;AAHL;AADqB,KAArB,CAAP;AAOH,GARD;;AAUI,QAAMC,cAAc,GAAG,OAAML,MAAN,EAAaM,MAAb,KAAuB;AAE1C,UAAMC,MAAM,GAAG,MAAMR,aAAa,CAAC,QAAD,CAAlC;AACAD,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAgB;AAACG,MAAAA,MAAM,EAAEO,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4B,YAA5B,CAAT;AAAmDC,MAAAA,KAAK,EAAEF,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4B,WAA5B,CAA1D;AAAmGF,MAAAA,MAAM,EAACA;AAA1G,KAAhB,CAAD,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4B,YAA5B,CAAZ;AACH,GALD;;AAQJnB,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,cAAc;AACjB,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMO,WAAW,GAAIZ,MAAD,IAAW,CAI9B,CAJD;;AAMA,QAAMa,QAAQ,GAAIb,MAAD,IAAW,CAE3B,CAFD;;AAOA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACH,MAAAA,WAAD;AAAaE,MAAAA,aAAb;AAA2Ba,MAAAA,WAA3B;AAAuCC,MAAAA;AAAvC,KAA9B;AAAA,cACKjB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjDD;;GAAMD,oB;;KAAAA,oB;AAkDN,eAAeA,oBAAf","sourcesContent":["import React,{createContext, useState, useEffect} from 'react'\nimport axios from 'axios';\n\n\nconst StockContext = createContext();\nconst axiosInstance = axios.create({\n    baseURL: 'https://www.alphavantage.co/query'\n});\n\n\n\nconst StockContextProvider = ({children})=>{\n\n    const[investments, setInvestments] = useState([\n        \n    ])\n\n\n\n    const getStockQuote = (symbol) =>{\n        return axiosInstance.get('',{\n        params:{\n            function: 'GLOBAL_QUOTE',\n            symbol,\n            apikey: '3H68FKF113QNYK6X'\n        }\n    })\n    }\n\n        const fetchStockData = async(symbol,shares) =>{\n\n            const result = await getStockQuote('GRN.TO');\n            setInvestments([...investments,{symbol: result.data['Global Quote']['01. symbol'],price: result.data['Global Quote']['05. price'],shares:shares}]);\n            console.log(result.data['Global Quote']['01. symbol']);\n        }\n\n\n    useEffect(()=>{\n        fetchStockData();\n    },[])\n\n    const deleteStock = (symbol) =>{\n\n\n\n    }\n\n    const addStock = (symbol) =>{\n\n    }\n\n\n\n    \n    return (\n        <StockContext.Provider value={{investments,getStockQuote,deleteStock,addStock}}>\n            {children}\n        </StockContext.Provider>\n    )\n\n}\nexport default StockContextProvider;    "]},"metadata":{},"sourceType":"module"}