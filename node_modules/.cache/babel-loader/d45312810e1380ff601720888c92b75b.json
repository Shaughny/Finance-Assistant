{"ast":null,"code":"var _jsxFileName = \"/home/mark/Documents/FinanceAssistant/client/src/contexts/DataContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport const DataContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    try {\n      const response = await fetch(\"/transactions\");\n      const dataAsJSON = await response.json();\n      setData(dataAsJSON);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [data.length]);\n\n  const addExpense = async (type, total) => {\n    try {\n      const body = {\n        type: type,\n        amount: total,\n        isIncome: false,\n        uuid: uuidv4()\n      };\n      const response = await fetch(\"/transactions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      setData([...data, {\n        type: body.type,\n        total: body.amount,\n        isincome: false,\n        uuid: body.uuid\n      }]);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const addIncome = async (type, total) => {\n    try {\n      const body = {\n        type: type,\n        amount: total,\n        isIncome: true,\n        uuid: uuidv4()\n      };\n      const response = await fetch(\"/transactions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n      setData([...data, {\n        type: body.type,\n        total: body.amount,\n        isincome: true,\n        uuid: body.uuid\n      }]);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const deleteData = async uuid => {\n    try {\n      const deleteTrans = await fetch(`/transactions/${uuid}`, {\n        method: \"DELETE\"\n      });\n      console.log(deleteTrans);\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    const temp = data.filter(e => e.uuid !== uuid);\n    setData(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      data,\n      addExpense,\n      addIncome,\n      deleteData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataContextProvider, \"j3shm0Wf/6tzJ/PeBDhWtWFBtEE=\");\n\n_c = DataContextProvider;\nexport default DataContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataContextProvider\");","map":{"version":3,"sources":["/home/mark/Documents/FinanceAssistant/client/src/contexts/DataContext.js"],"names":["React","createContext","useState","useEffect","v4","uuidv4","DataContext","DataContextProvider","children","data","setData","getData","response","fetch","dataAsJSON","json","error","console","log","message","length","addExpense","type","total","body","amount","isIncome","uuid","method","headers","JSON","stringify","isincome","addIncome","deleteData","deleteTrans","temp","filter","e"],"mappings":"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","sourcesContent":["import React,{createContext, useState, useEffect} from 'react'\nimport {v4 as uuidv4} from 'uuid';\n\n\n\nexport const DataContext = createContext();\n\nexport const DataContextProvider = ({children}) => {\n    \n    const[data, setData] = useState([\n    \n    ])\n    const getData = async() => {\n        try {\n            \n            const response = await fetch(\"/transactions\");\n            const dataAsJSON = await response.json();\n\n            setData(dataAsJSON);\n        } catch (error) {\n            console.log(error.message);\n        }\n\n    }\n    \n    useEffect(() => {\n        getData();\n    },[data.length]);\n\n\n\n\n\n    const addExpense = async(type,total) =>{\n        try {\n\n            const body = {\n                type:type,\n                amount:total,\n                isIncome: false,\n                uuid: uuidv4()\n            }\n\n            const response = await fetch(\"/transactions\",{\n                method:\"POST\",\n                headers:{\"Content-Type\": \"application/json\"},\n                body: JSON.stringify(body)\n            });\n            setData([...data,{type:body.type,total:body.amount,isincome:false,uuid:body.uuid}])\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    const addIncome = async (type,total) =>{\n\n        try {\n\n            const body = {\n                type:type,\n                amount:total,\n                isIncome: true,\n                uuid: uuidv4()\n            }\n\n            const response = await fetch(\"/transactions\",{\n                method:\"POST\",\n                headers:{\"Content-Type\": \"application/json\"},\n                body: JSON.stringify(body)\n            });\n            console.log(response);\n            setData([...data,{type:body.type,total:body.amount,isincome:true,uuid:body.uuid}])\n        } catch (error) {\n            console.log(error.message)\n        }\n\n    }\n    const deleteData = async(uuid) =>{\n\n        try {\n            \n            const deleteTrans = await fetch(`/transactions/${uuid}`,{\n                method:\"DELETE\"\n            });\n\n            console.log(deleteTrans);\n        } catch (error) {\n            console.log(error.message);\n        }\n        const temp = data.filter(e => e.uuid !== uuid)\n        setData(temp);\n    }\n\n\n    return (\n        <DataContext.Provider value={{data,addExpense,addIncome,deleteData}}>\n            {children}\n        </DataContext.Provider>\n    )\n}\n\nexport default DataContextProvider;"]},"metadata":{},"sourceType":"module"}