{"ast":null,"code":"var _jsxFileName = \"/home/mark/Documents/Projects/personalfinance testing/client/src/contexts/PortfolioContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StockContext = /*#__PURE__*/createContext();\nconst axiosInstance = axios.create({\n  baseURL: 'https://www.alphavantage.co/query'\n});\nexport const StockContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [investments, setInvestments] = useState([// {\n    //     symbol: \"GRN\",price: 1.69,shares: 500\n    // },{symbol: \"NUMI\",price: 0.99,shares: 460}\n  ]);\n\n  const getStockQuote = symbol => {\n    return axiosInstance.get('', {\n      params: {\n        function: 'GLOBAL_QUOTE',\n        symbol,\n        apikey: '3H68FKF113QNYK6X'\n      }\n    });\n  };\n\n  const fetchStockData = async (symbol, shares) => {// const result = await getStockQuote('GRN.TO');\n    // setInvestments([...investments,{symbol: result.data['Global Quote']['01. symbol'],price: result.data['Global Quote']['05. price'],shares:shares}]);\n    // console.log(result.data['Global Quote']['01. symbol']);\n  };\n\n  useEffect(() => {\n    fetchStockData();\n  }, []);\n\n  const deleteStock = symbol => {\n    const temp = investments.filter(e => e.symbol !== symbol);\n    setInvestments(temp);\n  };\n\n  const addStock = async (symbol, shares) => {\n    const result = await getStockQuote(symbol.toUpperCase());\n    console.log(result.data['Global Quote'].length);\n    setInvestments([...investments, {\n      symbol: result.data['Global Quote']['01. symbol'],\n      price: result.data['Global Quote']['05. price'],\n      shares: shares\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StockContext.Provider, {\n    value: {\n      investments,\n      getStockQuote,\n      deleteStock,\n      addStock\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StockContextProvider, \"dYV2fkQCP/8X+dc4nIFuapquu00=\");\n\n_c = StockContextProvider;\nexport default StockContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockContextProvider\");","map":{"version":3,"sources":["/home/mark/Documents/Projects/personalfinance testing/client/src/contexts/PortfolioContext.js"],"names":["React","createContext","useState","useEffect","axios","StockContext","axiosInstance","create","baseURL","StockContextProvider","children","investments","setInvestments","getStockQuote","symbol","get","params","function","apikey","fetchStockData","shares","deleteStock","temp","filter","e","addStock","result","toUpperCase","console","log","data","length","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AAGP,MAAMK,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE;AADsB,CAAb,CAAtB;AAMA,OAAO,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAE9C,QAAK,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAC1C;AACA;AACA;AAH0C,GAAD,CAA7C;;AASA,QAAMW,aAAa,GAAIC,MAAD,IAAW;AAC7B,WAAOR,aAAa,CAACS,GAAd,CAAkB,EAAlB,EAAqB;AAC5BC,MAAAA,MAAM,EAAC;AACHC,QAAAA,QAAQ,EAAE,cADP;AAEHH,QAAAA,MAFG;AAGHI,QAAAA,MAAM,EAAE;AAHL;AADqB,KAArB,CAAP;AAOH,GARD;;AAUI,QAAMC,cAAc,GAAG,OAAML,MAAN,EAAaM,MAAb,KAAuB,CAE1C;AACA;AACA;AACH,GALD;;AAQJjB,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,cAAc;AACjB,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAME,WAAW,GAAIP,MAAD,IAAW;AAC3B,UAAMQ,IAAI,GAAGX,WAAW,CAACY,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACV,MAAF,KAAYA,MAApC,CAAb;AACIF,IAAAA,cAAc,CAACU,IAAD,CAAd;AACP,GAHD;;AAKA,QAAMG,QAAQ,GAAG,OAAMX,MAAN,EAAaM,MAAb,KAAuB;AACpC,UAAMM,MAAM,GAAG,MAAMb,aAAa,CAACC,MAAM,CAACa,WAAP,EAAD,CAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAP,CAAa,cAAb,EAA6BC,MAAzC;AAEAnB,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAgB;AAACG,MAAAA,MAAM,EAAEY,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA4B,YAA5B,CAAT;AAAmDE,MAAAA,KAAK,EAAEN,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA4B,WAA5B,CAA1D;AAAmGV,MAAAA,MAAM,EAACA;AAA1G,KAAhB,CAAD,CAAd;AACH,GALD;;AAUA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACT,MAAAA,WAAD;AAAaE,MAAAA,aAAb;AAA2BQ,MAAAA,WAA3B;AAAuCI,MAAAA;AAAvC,KAA9B;AAAA,cACKf;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtDM;;GAAMD,oB;;KAAAA,oB;AAuDb,eAAeA,oBAAf","sourcesContent":["import React,{createContext, useState, useEffect} from 'react'\nimport axios from 'axios';\n\n\nexport const StockContext = createContext();\n\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://www.alphavantage.co/query'\n});\n\n\n\nexport const StockContextProvider = ({children})=>{\n\n    const[investments, setInvestments] = useState([\n        // {\n        //     symbol: \"GRN\",price: 1.69,shares: 500\n        // },{symbol: \"NUMI\",price: 0.99,shares: 460}\n        \n    ])\n\n\n\n    const getStockQuote = (symbol) =>{\n        return axiosInstance.get('',{\n        params:{\n            function: 'GLOBAL_QUOTE',\n            symbol,\n            apikey: '3H68FKF113QNYK6X'\n        }\n    })\n    }\n\n        const fetchStockData = async(symbol,shares) =>{\n\n            // const result = await getStockQuote('GRN.TO');\n            // setInvestments([...investments,{symbol: result.data['Global Quote']['01. symbol'],price: result.data['Global Quote']['05. price'],shares:shares}]);\n            // console.log(result.data['Global Quote']['01. symbol']);\n        }\n\n\n    useEffect(()=>{\n        fetchStockData();\n    },[])\n\n    const deleteStock = (symbol) =>{\n        const temp = investments.filter(e => e.symbol!== symbol);\n            setInvestments(temp);\n    }\n\n    const addStock = async(symbol,shares) =>{\n        const result = await getStockQuote(symbol.toUpperCase());\n        console.log(result.data.['Global Quote'].length)\n       \n        setInvestments([...investments,{symbol: result.data['Global Quote']['01. symbol'],price: result.data['Global Quote']['05. price'],shares:shares}]);\n    }\n\n\n\n    \n    return (\n        <StockContext.Provider value={{investments,getStockQuote,deleteStock,addStock}}>\n            {children}\n        </StockContext.Provider>\n    )\n\n}\nexport default StockContextProvider;    "]},"metadata":{},"sourceType":"module"}